plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // JPA Relatives
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java:8.0.31'

    // Flyway
    implementation 'org.flywaydb:flyway-core:9.14.1'
    implementation 'org.flywaydb:flyway-mysql'
    testImplementation 'org.flywaydb:flyway-mysql'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Logging
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

    // JSON Libs
    implementation 'com.google.code.gson:gson:2.10.1'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Map Struct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Enable Java Preview (1)
compileJava {
    options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

// Enable Java Preview (2)
compileTestJava {
    options.compilerArgs += ['--enable-preview', '-Amapstruct.defaultComponentModel=spring']
}

// Enable Java Preview (3)
test {
    useJUnitPlatform()
    jvmArgs(['--enable-preview', '-Amapstruct.defaultComponentModel=spring'])
}